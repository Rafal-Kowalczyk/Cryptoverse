{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetalis.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptosList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filterData","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","cionPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetalis","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","md","bodyStyle","padding","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.76daf025.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport icon from \"../images/cryptocurrency.png\";\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\r\n\r\n  // \"x-rapidapi-host\": \"https://api.coinranking.com/v2\",\r\n  // \"x-access-token\":\r\n  //   \"coinranking4bbe66efb55e96b0746adc2b5a13921e8732431ae232eb90\",\r\n};\r\n\r\n// const baseUrl = process.env.REACT_APP_CRYPTO_API_URL;\r\n// const baseUrl = \"https://api.coinranking.com/v2\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_CRYPTO_API_URL,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(\"/exchanges\"),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n\r\n  console.log(data);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cup\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24 Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Lastest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange.description || \"\")}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Exchanges;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setCryptos(cryptosList?.data?.coins);\r\n    const filterData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filterData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrencies\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={\r\n                  <img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />\r\n                }\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const cionPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    cionPrice.push(coinHistory.data.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price in USD\",\r\n        data: cionPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            {coinHistory?.data?.change}\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetalis = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Time Period\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"cion-details-hesding\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"cion-details-hesding\">\r\n              Other Statistics\r\n            </Title>\r\n            <p>An overview showing the statistics of all cryptocurrencies.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}{\" \"}\r\n            {HTMLReactParser(cryptoDetails.description)}\r\n          </Title>\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetalis;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\r\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\r\n};\r\n\r\n// const baseUrl = process.env.REACT_APP_NEWS_API_URL;\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsHeaders,\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_NEWS_API_URL,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Card, Row, Col, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage =\r\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrencies\");\r\n\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  if (!cryptoNews?.value) return \"Loading...\";\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[24, 24]}>\r\n        {!simplified && (\r\n          <Col span={24}>\r\n            <Select\r\n              showSearch\r\n              className=\"select-news\"\r\n              placeholder=\"Selact a Crypto\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(value) => setNewsCategory(value)}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"Cryptocurrencies\">Cryptocurrencies</Option>\r\n              {data?.data?.coins.map((coin) => (\r\n                <Option value={coin.name} key={coin.id}>\r\n                  {coin.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        )}\r\n\r\n        {cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} md={12} lg={8} key={i}>\r\n            <Card\r\n              hoverable\r\n              className=\"news-card\"\r\n              bodyStyle={{ padding: \"15px\" }}\r\n            >\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                    <Avatar\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                    <Text className=\"provider-name\">\r\n                      {news.provider[0]?.name}\r\n                    </Text>\r\n                  </div>\r\n                  <Text>\r\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Navbar,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetalis,\n  Homepage,\n  News,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route path=\"/crypto/:coinId\">\n                <CryptoDetalis />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All rights reservers\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}